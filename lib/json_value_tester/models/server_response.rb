# json_value_tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module JsonValueTester
  # ServerResponse Model.
  class ServerResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :passed

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message

    # TODO: Write general description for this method
    # @return [Hash[String, Hash]]
    attr_accessor :input

    # TODO: Write general description for this method
    # @return [Hash[String, Float]]
    attr_accessor :nullable_number_map

    # TODO: Write general description for this method
    # @return [Array[Float]]
    attr_accessor :nullable_number_array

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['passed'] = 'passed'
      @_hash['message'] = 'Message'
      @_hash['input'] = 'input'
      @_hash['nullable_number_map'] = 'nullableNumberMap'
      @_hash['nullable_number_array'] = 'nullableNumberArray'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        message
        input
        nullable_number_map
        nullable_number_array
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(passed = nil, message = SKIP, input = SKIP,
                   nullable_number_array = SKIP, nullable_number_map = SKIP,
                   additional_properties = {})
      @passed = passed
      @message = message unless message == SKIP
      @input = input unless input == SKIP
      @nullable_number_map = nullable_number_map unless nullable_number_map == SKIP
      @nullable_number_array = nullable_number_array unless nullable_number_array == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      passed = hash.key?('passed') ? hash['passed'] : nil
      message = hash.key?('Message') ? hash['Message'] : SKIP
      input = hash.key?('input') ? hash['input'] : SKIP
      nullable_number_array =
        hash.key?('nullableNumberArray') ? hash['nullableNumberArray'] : SKIP
      nullable_number_map =
        hash.key?('nullableNumberMap') ? hash['nullableNumberMap'] : SKIP

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      ServerResponse.new(passed,
                         message,
                         input,
                         nullable_number_array,
                         nullable_number_map,
                         hash)
    end
  end
end
