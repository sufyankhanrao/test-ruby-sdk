# json_value_tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module JsonValueTester
  # JsonValController
  class JsonValController < BaseController
    # Send Value in Model
    # @param [ValueContainer] body Required parameter: Example:
    # @return [ServerResponse] response from the API call.
    def send_valuein_model(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/body/sendValueInModel',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ServerResponse.method(:from_hash)))
        .execute
    end

    # Send Value as Body
    # @param [Object] body Required parameter: Example:
    # @return [ServerResponse] response from the API call.
    def send_valueas_body(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/body/sendValue',
                                     Server::DEFAULT)
                   .header_param(new_parameter('text/plain', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(APIHelper.method(:json_serialize)))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ServerResponse.method(:from_hash)))
        .execute
    end

    # Send Value as Form
    # @param [ContentType] content_type Required parameter: Example:
    # @param [Integer] id Required parameter: Example:
    # @param [Object] model Required parameter: Example:
    # @param [Array[Object]] model_array Optional parameter: Example:
    # @param [Hash[String, Object]] model_map Optional parameter: Example:
    # @return [ServerResponse] response from the API call.
    def send_valueas_form(options = {})
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/form/sendValue',
                                     Server::DEFAULT)
                   .form_param(new_parameter(options['id'], key: 'id')
                                .is_required(true))
                   .form_param(new_parameter(options['model'], key: 'model')
                                .is_required(true))
                   .form_param(new_parameter(options['model_array'], key: 'modelArray'))
                   .form_param(new_parameter(options['model_map'], key: 'modelMap'))
                   .header_param(new_parameter('application/x-www-form-urlencoded', key: 'content-type'))
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ServerResponse.method(:from_hash)))
        .execute
    end

    # Send Value as Query
    # @param [Integer] id Required parameter: Example:
    # @param [Object] model Required parameter: Example:
    # @param [Array[Object]] model_array Optional parameter: Example:
    # @param [Hash[String, Object]] model_map Optional parameter: Example:
    # @return [ServerResponse] response from the API call.
    def send_valueas_query(options = {})
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/query/sendValue',
                                     Server::DEFAULT)
                   .query_param(new_parameter(options['id'], key: 'id')
                                 .is_required(true))
                   .query_param(new_parameter(options['model'], key: 'model')
                                 .is_required(true))
                   .query_param(new_parameter(options['model_array'], key: 'modelArray'))
                   .query_param(new_parameter(options['model_map'], key: 'modelMap'))
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ServerResponse.method(:from_hash)))
        .execute
    end

    # Get Value
    # @return [Object] response from the API call.
    def get_value
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/response/getValue',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # Get Value Array
    # @return [Array[Object]] response from the API call.
    def get_value_array
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/response/getValueArray',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:json_deserialize))
                    .is_response_array(true))
        .execute
    end

    # Get Value Map
    # @return [Hash[String, Object]] response from the API call.
    def get_value_map
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/response/getValueMap',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # Get Value in Model
    # @return [ValueContainer] response from the API call.
    def get_valuein_model
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/response/getValueInModel',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                    .is_nullify404(true)
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ValueContainer.method(:from_hash)))
        .execute
    end
  end
end
